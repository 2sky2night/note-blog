import{_ as s,o as a,c as o,Q as n}from"./chunks/framework.273ff57c.js";const h=JSON.parse('{"title":"字符与 unicode 编码互相转换","description":"","frontmatter":{},"headers":[],"relativePath":"question/js/03.md","filePath":"question/js/03.md","lastUpdated":1699188084000}'),e={name:"question/js/03.md"},l=n(`<h1 id="字符与-unicode-编码互相转换" tabindex="-1">字符与 unicode 编码互相转换 <a class="header-anchor" href="#字符与-unicode-编码互相转换" aria-label="Permalink to &quot;字符与 unicode 编码互相转换&quot;">​</a></h1><h2 id="字符转-unicode" tabindex="-1">字符转 unicode <a class="header-anchor" href="#字符转-unicode" aria-label="Permalink to &quot;字符转 unicode&quot;">​</a></h2><p>charCodeAt 可以输出字符对应的 unicode 编码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;你&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 转换成16进制</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;你&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 十进制</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;你&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 转换成16进制</span></span>
<span class="line"><span style="color:#032F62;">&quot;你&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 十进制</span></span></code></pre></div><h2 id="unicode-转字符" tabindex="-1">unicode 转字符 <a class="header-anchor" href="#unicode-转字符" aria-label="Permalink to &quot;unicode 转字符&quot;">​</a></h2><p>String.fromCharCode 静态方法可以将 unicode 编码转换成字符串</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0x4f60</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0x4f60</span><span style="color:#24292E;">);</span></span></code></pre></div>`,7),p=[l];function t(c,r,i,d,u,y){return a(),o("div",null,p)}const C=s(e,[["render",t]]);export{h as __pageData,C as default};

import{_ as s,o as a,c as o,Q as n}from"./chunks/framework.f98883f0.js";const q=JSON.parse('{"title":"vite 的环境变量","description":"","frontmatter":{},"headers":[],"relativePath":"question/vite/02.md","filePath":"question/vite/02.md","lastUpdated":1699188084000}'),e={name:"question/vite/02.md"},t=n(`<h1 id="vite-的环境变量" tabindex="-1">vite 的环境变量 <a class="header-anchor" href="#vite-的环境变量" aria-label="Permalink to &quot;vite 的环境变量&quot;">​</a></h1><p>​ 在项目启动时，我们可以让项目以什么环境下启动，例如开发环境、生成环境下启动。在对应环境下可以配置不同的环境变量。在环境变量中，可以配置各种数据，以便在工程中访问这些数据。</p><h2 id="配置-package-json-文件" tabindex="-1">配置 package.json 文件 <a class="header-anchor" href="#配置-package-json-文件" aria-label="Permalink to &quot;配置 package.json 文件&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;start:dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite --mode development&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 开发模式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;start:pro&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite --mode production&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 生产模式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue-tsc &amp;&amp; vite build&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;preview&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;start:dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite --mode development&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 开发模式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;start:pro&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite --mode production&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 生产模式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue-tsc &amp;&amp; vite build&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;preview&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span></code></pre></div><p>注意 <code>development</code>、<code>production</code>，这两个模式下一定要有对应环境变量文件</p><p>创建<code>.env.development</code> 和<code>.env.production</code> 环境变量文件，并定义环境变量</p><h2 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h2><h2 id="全局环境变量" tabindex="-1">全局环境变量 <a class="header-anchor" href="#全局环境变量" aria-label="Permalink to &quot;全局环境变量&quot;">​</a></h2><p>全局环境变量是指在任意模式下启动项目都可以访问的数据，只需要创建<code>.env</code>文件，<code>.env</code>文件会在任意模式下载入数据。</p><h3 id="内置的环境变量" tabindex="-1">内置的环境变量 <a class="header-anchor" href="#内置的环境变量" aria-label="Permalink to &quot;内置的环境变量&quot;">​</a></h3><p>Vite 在一个特殊的 i<wbr>mport.meta.env 对象上暴露环境变量。这里有一些在所有情况下都可以使用的内建变量：</p><p><code>i<wbr>mport.meta.env.MODE</code>: {string} 应用运行的模式。</p><p><code>i<wbr>mport.meta.env.BASE_URL</code>: {string} 部署应用时的基本 URL。他由 base 配置项决定。</p><p><code>i<wbr>mport.meta.env.PROD</code>: {boolean} 应用是否运行在生产环境。</p><p><code>i<wbr>mport.meta.env.DEV</code>: {boolean} 应用是否运行在开发环境 (永远与 i<wbr>mport.meta.env.PROD 相反)。</p><p><code>i<wbr>mport.meta.env.SSR</code>: {boolean} 应用是否运行在 server 上。</p><h3 id="自定义环境变量" tabindex="-1">自定义环境变量 <a class="header-anchor" href="#自定义环境变量" aria-label="Permalink to &quot;自定义环境变量&quot;">​</a></h3><p>自定义环境变量必须以** VITE_**开头。</p><h2 id="自定义模式" tabindex="-1">自定义模式 <a class="header-anchor" href="#自定义模式" aria-label="Permalink to &quot;自定义模式&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;start:dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite --mode development&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;start:pro&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite --mode production&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;start:test&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;vite --mode testok&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 自定义模式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vue-tsc &amp;&amp; vite build&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;preview&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;start:dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite --mode development&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;start:pro&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite --mode production&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;start:test&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;vite --mode testok&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 自定义模式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vue-tsc &amp;&amp; vite build&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;preview&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span></code></pre></div><p>模式名称为 testok，则我们必须保证工程里面有.env.testok 文件即可。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://juejin.cn/post/7172012247852515335" target="_blank" rel="noreferrer">https://juejin.cn/post/7172012247852515335</a></li></ol>`,23),p=[t];function l(r,c,i,E,u,d){return a(),o("div",null,p)}const v=s(e,[["render",l]]);export{q as __pageData,v as default};

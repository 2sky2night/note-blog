import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.273ff57c.js";const F=JSON.parse('{"title":"图片裁剪","description":"","frontmatter":{},"headers":[],"relativePath":"question/other/03.md","filePath":"question/other/03.md","lastUpdated":1699188084000}'),p={name:"question/other/03.md"},o=l(`<h1 id="图片裁剪" tabindex="-1">图片裁剪 <a class="header-anchor" href="#图片裁剪" aria-label="Permalink to &quot;图片裁剪&quot;">​</a></h1><p>本次将通过 canvas 实现图片裁剪的功能，上传文件后本地加载图片并渲染图片与裁剪框，裁剪框可以在图片内部中移动（记录裁剪的偏移量、大小），最终通过 canvas 的 api 实现裁剪功能，最后导出成 blob 数据。</p><h2 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h2><ol><li>通过文件域将图片上传</li><li>通过<code>URL.createObjectURL</code>将图片通过 img 渲染出来</li><li>在图片上铺满遮罩层，将裁剪框放置在遮罩层中，并通过事件交互设置裁剪框大小以及偏移量</li><li>设置好裁剪区域后，记录下裁剪框的偏移量、尺寸，计算出当前图片与图片原始尺寸（<code>img.natureWidth</code>）的缩放比,因为 canvas 渲染图片是直接渲染的图片原始尺寸，所以需要计算出缩放比例，后续 api 需要用到。</li><li>通过 ctx.drawImgae(img，图片原始 left 偏移量，图片原始 top 偏移量，图片原始裁剪宽度，图片原始裁剪高度,渲染到 canvas 的 left 偏移量,渲染到 canvas 的 top 偏移量,渲染出的宽度，渲染出的高度)渲染图片。其中<strong>图片原始 left 偏移量</strong>、<strong>图片原始 top 偏移量</strong>、<strong>图片原始裁剪宽度</strong>，<strong>图片原始裁剪高度</strong>,需要通过计算得出的。我们知道缩放比、以及缩放后的偏移量、缩放后的尺寸，可以计算出原始的偏移量、尺寸。 计算方法为: 原始 left 偏移量:当前 left 偏移量/缩放比例 原始 top 偏移量:当前 top 偏移量/缩放比例 原始裁剪的 width:当前裁剪框 width/缩放比例 原始裁剪的 height:当前裁剪框 height/缩放比例</li><li>最后通过 canvas.toBlob 将图片导出为二进制数据，当然也可以将 Blob 包装成 File 文件</li></ol><h1 id="关键步骤" tabindex="-1">关键步骤 <a class="header-anchor" href="#关键步骤" aria-label="Permalink to &quot;关键步骤&quot;">​</a></h1><p>通过 cavansd 的 drawImage 绘制原始图片，并裁剪出对应大小、位置的图片。 剪切图像，并在画布上定位被剪切的部分：</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>由于<code>drawImage</code>调用后，canvas 会将图片的原始尺寸渲染到画布中，而裁剪框记录的偏移量、大小都是根据实际图片来记录的，所以我们需要通过图片的<strong>原始尺寸</strong>、<strong>实际尺寸</strong>计算出缩放比例，也就是<code>实际宽度/原始宽度</code>即可计算出缩放比例了，然后就可以<code>context.drawImage(img, 裁剪框left偏移量/比例, 裁剪框裁剪框top宽度/比例, 裁剪框宽度/比例, 裁剪框高度/比例,画布输出left偏移量,画布输出top偏移量 , 画布输出宽度,画布输出高度);</code></p></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">context.</span><span style="color:#B392F0;">drawImage</span><span style="color:#E1E4E8;">(img, sx, sy, swidth, sheight, x, y, width, height);</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * img:要渲染哪个图片？</span></span>
<span class="line"><span style="color:#6A737D;"> * sx：从这个图片的x轴上的某个值开始裁剪</span></span>
<span class="line"><span style="color:#6A737D;"> * sy：从这个图片的y轴上的某个值开始裁剪</span></span>
<span class="line"><span style="color:#6A737D;"> * swidth：从这个图片的x轴上裁剪多宽的内容</span></span>
<span class="line"><span style="color:#6A737D;"> * sheight：从这个图片的y轴上裁剪多宽的内容</span></span>
<span class="line"><span style="color:#6A737D;"> * x：将裁剪出来的图片输出到画布的x轴上的某一处</span></span>
<span class="line"><span style="color:#6A737D;"> * y：将裁剪出来的图片输出到画布上的y轴上的某一处</span></span>
<span class="line"><span style="color:#6A737D;"> * width：输出到画布上图片的宽度</span></span>
<span class="line"><span style="color:#6A737D;"> * height：输出到画布上图片的高度</span></span>
<span class="line"><span style="color:#6A737D;"> **/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">context.</span><span style="color:#6F42C1;">drawImage</span><span style="color:#24292E;">(img, sx, sy, swidth, sheight, x, y, width, height);</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * img:要渲染哪个图片？</span></span>
<span class="line"><span style="color:#6A737D;"> * sx：从这个图片的x轴上的某个值开始裁剪</span></span>
<span class="line"><span style="color:#6A737D;"> * sy：从这个图片的y轴上的某个值开始裁剪</span></span>
<span class="line"><span style="color:#6A737D;"> * swidth：从这个图片的x轴上裁剪多宽的内容</span></span>
<span class="line"><span style="color:#6A737D;"> * sheight：从这个图片的y轴上裁剪多宽的内容</span></span>
<span class="line"><span style="color:#6A737D;"> * x：将裁剪出来的图片输出到画布的x轴上的某一处</span></span>
<span class="line"><span style="color:#6A737D;"> * y：将裁剪出来的图片输出到画布上的y轴上的某一处</span></span>
<span class="line"><span style="color:#6A737D;"> * width：输出到画布上图片的宽度</span></span>
<span class="line"><span style="color:#6A737D;"> * height：输出到画布上图片的高度</span></span>
<span class="line"><span style="color:#6A737D;"> **/</span></span></code></pre></div><p>参数值</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><em>img</em></td><td style="text-align:left;">规定要使用的图像、画布或视频。</td></tr><tr><td style="text-align:left;"><em>sx</em></td><td style="text-align:left;">可选。开始剪切的 x 坐标位置。</td></tr><tr><td style="text-align:left;"><em>sy</em></td><td style="text-align:left;">可选。开始剪切的 y 坐标位置。</td></tr><tr><td style="text-align:left;"><em>swidth</em></td><td style="text-align:left;">可选。被剪切图像的宽度。</td></tr><tr><td style="text-align:left;"><em>sheight</em></td><td style="text-align:left;">可选。被剪切图像的高度。</td></tr><tr><td style="text-align:left;"><em>x</em></td><td style="text-align:left;">在画布上放置图像的 x 坐标位置。</td></tr><tr><td style="text-align:left;"><em>y</em></td><td style="text-align:left;">在画布上放置图像的 y 坐标位置。</td></tr><tr><td style="text-align:left;"><em>width</em></td><td style="text-align:left;">可选。要使用的图像的宽度。（伸展或缩小图像）</td></tr><tr><td style="text-align:left;"><em>height</em></td><td style="text-align:left;">可选。要使用的图像的高度。（伸展或缩小图像）</td></tr></tbody></table><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// width、height裁剪框大小</span></span>
<span class="line"><span style="color:#6A737D;">// img为Image实例</span></span>
<span class="line"><span style="color:#6A737D;">// left、top为裁剪框居于原图片的偏移量</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cutter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">img</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">height</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">left</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">top</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">cb</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myCanvas</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;canvas&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ctx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> myCanvas.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;2d&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  myCanvas.width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> width; </span><span style="color:#6A737D;">// 画布大小应为裁剪框大小</span></span>
<span class="line"><span style="color:#E1E4E8;">  myCanvas.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> height; </span><span style="color:#6A737D;">//  画布大小应为裁剪框大小</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 绘制图片时设置偏移量以及大小。参数6、7必须是0，可以让裁剪的内容刚好在画布中呈现。</span></span>
<span class="line"><span style="color:#E1E4E8;">  ctx.</span><span style="color:#B392F0;">drawImage</span><span style="color:#E1E4E8;">(img, left, top, width, height, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, width, height);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 将图片导出成blob</span></span>
<span class="line"><span style="color:#E1E4E8;">  myCanvas.</span><span style="color:#B392F0;">toBlob</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">blob</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">URL</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createObjectURL</span><span style="color:#E1E4E8;">(blob);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">cb</span><span style="color:#E1E4E8;">(url);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// width、height裁剪框大小</span></span>
<span class="line"><span style="color:#6A737D;">// img为Image实例</span></span>
<span class="line"><span style="color:#6A737D;">// left、top为裁剪框居于原图片的偏移量</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cutter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">img</span><span style="color:#24292E;">, </span><span style="color:#E36209;">width</span><span style="color:#24292E;">, </span><span style="color:#E36209;">height</span><span style="color:#24292E;">, </span><span style="color:#E36209;">left</span><span style="color:#24292E;">, </span><span style="color:#E36209;">top</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cb</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myCanvas</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;canvas&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ctx</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myCanvas.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;2d&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  myCanvas.width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> width; </span><span style="color:#6A737D;">// 画布大小应为裁剪框大小</span></span>
<span class="line"><span style="color:#24292E;">  myCanvas.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> height; </span><span style="color:#6A737D;">//  画布大小应为裁剪框大小</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 绘制图片时设置偏移量以及大小。参数6、7必须是0，可以让裁剪的内容刚好在画布中呈现。</span></span>
<span class="line"><span style="color:#24292E;">  ctx.</span><span style="color:#6F42C1;">drawImage</span><span style="color:#24292E;">(img, left, top, width, height, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, width, height);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 将图片导出成blob</span></span>
<span class="line"><span style="color:#24292E;">  myCanvas.</span><span style="color:#6F42C1;">toBlob</span><span style="color:#24292E;">((</span><span style="color:#E36209;">blob</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">url</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">URL</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">createObjectURL</span><span style="color:#24292E;">(blob);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">(url);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="实现源代码" tabindex="-1">实现源代码 <a class="header-anchor" href="#实现源代码" aria-label="Permalink to &quot;实现源代码&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 点击确定</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handleConfrim</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">nextTick</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 完整图片的DOM</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">imgDOM</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> preImgDOM.value;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (imgUrl </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> imgDOM) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">naturalHeight</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">clientHeight</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> imgDOM;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 裁剪框信息</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">width</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">height</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">left</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">top</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cutterOffset.value;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 用canvans实现裁剪</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">canvas</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;canvas&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 画布大小就是裁剪框大小</span></span>
<span class="line"><span style="color:#E1E4E8;">      canvas.width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> width;</span></span>
<span class="line"><span style="color:#E1E4E8;">      canvas.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> height;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ctx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> canvas.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;2d&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ctx) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 计算出原图片和当前图片的缩放比例</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 这一步非常关键，因为在渲染图片时，canvas是直接将图片原尺寸渲染上去了</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 会导致我们设置的偏移量和大小会有巨大的误差(因为我们是在被缩放过的图片调整裁剪框的位置大小)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 所以我们需要计算出缩放的比例</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(clientHeight </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> naturalHeight).</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 根据偏移量和尺寸渲染对应位置的图片</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 前面五个参数是渲染的图片、原图片的x坐标、原图片的y坐标、裁剪尺寸</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 后面四个参数是canvas画布的输出位置，将图片渲染在（0，0）的位置，大小为width, height</span></span>
<span class="line"><span style="color:#E1E4E8;">        ctx.</span><span style="color:#B392F0;">drawImage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          imgDOM,</span></span>
<span class="line"><span style="color:#E1E4E8;">          left </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> rate,</span></span>
<span class="line"><span style="color:#E1E4E8;">          top </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> rate,</span></span>
<span class="line"><span style="color:#E1E4E8;">          width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> rate,</span></span>
<span class="line"><span style="color:#E1E4E8;">          height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> rate,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          width,</span></span>
<span class="line"><span style="color:#E1E4E8;">          height</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 将图片导出</span></span>
<span class="line"><span style="color:#E1E4E8;">        canvas.</span><span style="color:#B392F0;">toBlob</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">blob</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (blob </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> imgFileInfo) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">&quot;cutDown&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">([blob], imgFileInfo.name, {</span></span>
<span class="line"><span style="color:#E1E4E8;">                type: imgFileInfo.type,</span></span>
<span class="line"><span style="color:#E1E4E8;">                lastModified: imgFileInfo.lastModified,</span></span>
<span class="line"><span style="color:#E1E4E8;">              })</span></span>
<span class="line"><span style="color:#E1E4E8;">            );</span></span>
<span class="line"><span style="color:#E1E4E8;">          } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;cutDown&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// 关闭模态框</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">handleCloseBtn</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        props.</span><span style="color:#B392F0;">otherError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;画布上下文无法获取!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 关闭模态框</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">handleCloseBtn</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 请先上传图片!</span></span>
<span class="line"><span style="color:#E1E4E8;">      props.</span><span style="color:#B392F0;">otherError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;请先上传图片!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 点击确定</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handleConfrim</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">nextTick</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 完整图片的DOM</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">imgDOM</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> preImgDOM.value;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (imgUrl </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> imgDOM) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">naturalHeight</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">clientHeight</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> imgDOM;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 裁剪框信息</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">width</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">height</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">left</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">top</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cutterOffset.value;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 用canvans实现裁剪</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">canvas</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;canvas&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 画布大小就是裁剪框大小</span></span>
<span class="line"><span style="color:#24292E;">      canvas.width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> width;</span></span>
<span class="line"><span style="color:#24292E;">      canvas.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> height;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ctx</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> canvas.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;2d&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ctx) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 计算出原图片和当前图片的缩放比例</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 这一步非常关键，因为在渲染图片时，canvas是直接将图片原尺寸渲染上去了</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 会导致我们设置的偏移量和大小会有巨大的误差(因为我们是在被缩放过的图片调整裁剪框的位置大小)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 所以我们需要计算出缩放的比例</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(clientHeight </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> naturalHeight).</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 根据偏移量和尺寸渲染对应位置的图片</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 前面五个参数是渲染的图片、原图片的x坐标、原图片的y坐标、裁剪尺寸</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 后面四个参数是canvas画布的输出位置，将图片渲染在（0，0）的位置，大小为width, height</span></span>
<span class="line"><span style="color:#24292E;">        ctx.</span><span style="color:#6F42C1;">drawImage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          imgDOM,</span></span>
<span class="line"><span style="color:#24292E;">          left </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> rate,</span></span>
<span class="line"><span style="color:#24292E;">          top </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> rate,</span></span>
<span class="line"><span style="color:#24292E;">          width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> rate,</span></span>
<span class="line"><span style="color:#24292E;">          height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> rate,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          width,</span></span>
<span class="line"><span style="color:#24292E;">          height</span></span>
<span class="line"><span style="color:#24292E;">        );</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 将图片导出</span></span>
<span class="line"><span style="color:#24292E;">        canvas.</span><span style="color:#6F42C1;">toBlob</span><span style="color:#24292E;">((</span><span style="color:#E36209;">blob</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (blob </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> imgFileInfo) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;cutDown&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">([blob], imgFileInfo.name, {</span></span>
<span class="line"><span style="color:#24292E;">                type: imgFileInfo.type,</span></span>
<span class="line"><span style="color:#24292E;">                lastModified: imgFileInfo.lastModified,</span></span>
<span class="line"><span style="color:#24292E;">              })</span></span>
<span class="line"><span style="color:#24292E;">            );</span></span>
<span class="line"><span style="color:#24292E;">          } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cutDown&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 关闭模态框</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">handleCloseBtn</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        props.</span><span style="color:#6F42C1;">otherError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;画布上下文无法获取!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 关闭模态框</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">handleCloseBtn</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 请先上传图片!</span></span>
<span class="line"><span style="color:#24292E;">      props.</span><span style="color:#6F42C1;">otherError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请先上传图片!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://juejin.cn/post/7173860307574456334" target="_blank" rel="noreferrer">https://juejin.cn/post/7173860307574456334</a></li></ol>`,15),e=[o];function t(c,r,E,y,i,h){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{F as __pageData,g as default};

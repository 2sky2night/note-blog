import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.f98883f0.js";const q=JSON.parse('{"title":"vite项目规范化配置","description":"","frontmatter":{"outline":[1,2],"title":"vite项目规范化配置"},"headers":[],"relativePath":"question/vite/04.md","filePath":"question/vite/04.md","lastUpdated":1701600046000}'),p={name:"question/vite/04.md"},o=l(`<h1 id="起步" tabindex="-1">起步 <a class="header-anchor" href="#起步" aria-label="Permalink to &quot;起步&quot;">​</a></h1><p>​ 一个前端项目往往都需要多人开发，为了便于维护与管理，往往都需要对代码质量、代码 格式（CSS、JS、HTML）以及 git 提交注释都要进行统一规范化。</p><p>​ 一般前端规范化通常包含了：</p><ol><li><p>ESLint：ESLint 是一个用于识别和报告 JavaScript 代码中的模式问题的工具，可以帮 助团队遵循统一的编码规范，发现潜在的代码错误和漏洞。</p></li><li><p>Prettier：Prettier 是一个代码格式化工具，可以自动格式化代码，使代码风格保持一 致，避免团队成员在代码格式上的争议。</p></li><li><p>Husky：Husky 是一个 Git 钩子工具，可以在代码提交、代码推送等操作前后执行预定 义的脚本，比如在提交代码前运行 ESLint 和 Prettier。</p></li><li><p>lint-staged：lint-staged 是一个在提交阶段运行 linters 的工具，可以只对提交的 文件进行检查，提高 lint 的效率。</p></li><li><p>Commitlint：Commitlint 是一个用于检查提交信息是否符合规范的工具，可以帮助团队 统一提交信息的格式。</p></li><li><p>Commitizen：Commitizen 是一个用于规范化提交信息的工具，可以通过交互式命令行帮 助开发者生成符合规范的提交信息，提高提交信息的质量和统一性。</p></li><li><p>stylelint：用来检查 css 的，提升 css 的可读性。</p><p>通常每个项目可能的规范都不一样，所以一般都是一个项目里面集成了一套规范化方案 。</p></li></ol><p>扩展：</p><ol><li>文档规范化：可以使用工具如 Docsify、Docusaurus、GitBook 等来管理项目文档，这 些工具提供了文档编写、版本管理、主题定制等功能，有助于规范化文档管理。</li><li>测试规范化：对于单元测试、集成测试等，可以使用 Jest、Mocha、Karma 等测试框架 ，并结合 CI/CD 工具（如 Jenkins、Travis CI 等）进行自动化测试和报告。</li><li>版本管理规范化：可以使用 SemVer（语义化版本）规范，并结合工具如 standard-version 来自动化版本管理和发布流程。</li><li>代码审查规范化：可以使用工具如 GitHub、GitLab 等提供的 Pull Request 功能，结 合代码审查工具如 CodeStream、Crucible 等进行代码审查。</li><li>项目结构规范化：可以使用工具如 Yeoman、create-react-app 等来生成项目脚手架， 以确保项目结构的一致性。</li><li>构建和部署规范化：可以使用工具如 Webpack、Rollup 等进行项目构建，结合 CI/CD 工具（如 Jenkins、Travis CI、CircleCI 等）进行自动化构建和部署。</li></ol><h1 id="代码规范化" tabindex="-1">代码规范化 <a class="header-anchor" href="#代码规范化" aria-label="Permalink to &quot;代码规范化&quot;">​</a></h1><p>Eslint 可以帮助我们对当前项目的代码风格进行统一的检查。eslint 是一个开源的 <code>JavaScript</code> 的 <code>linting</code> 工具，使用 <code>espree</code> 将 <code>JavaScript</code> 代码解析成抽象语法 树 <code>(AST)</code>，然后通过<code>AST</code> 来分析我们代码，从而给予我们两种提示：</p><ul><li><strong>代码质量问题</strong>：使用方式有可能有问题(problematic patterns)</li><li><strong>代码风格问题</strong>：风格不符合一定规则 (doesn’t adhere to certain style guidelines)。</li></ul><p>一般来说我们自己也有给 vscode 安装 eslint 插件，为什么我们需要单独在项目中集成呢 ？就是因为每个人的 eslint 插件的配置都不一样，就会导致代码规范化得不统一。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span></span></code></pre></div><h2 id="配置流程" tabindex="-1">配置流程 <a class="header-anchor" href="#配置流程" aria-label="Permalink to &quot;配置流程&quot;">​</a></h2><p>运行上述初始化命令后就会在控制台上根据提示配置 eslint 了，配置完成后会生 成<code>.eslintc.js</code>文件（选择配置文件输出到 js 中）。当然也可以配置 <code>.eslintignore</code> 来新增不想格式化的文件。规则类似于 <code>.gitignore</code>。</p><h3 id="how-would-you-like-to-use-eslint-你要如何使用-eslint" tabindex="-1">? How would you like to use ESLint?(你要如何使用 ESlint？) ... <a class="header-anchor" href="#how-would-you-like-to-use-eslint-你要如何使用-eslint" aria-label="Permalink to &quot;? How would you like to use ESLint?(你要如何使用 ESlint？) ...&quot;">​</a></h3><p>To check syntax only (仅检查语法)</p><p>To check syntax and find problems（检查语法并查找问题）</p><p>To check syntax, find problems, and enforce code style（检查语法、查找问题和强制 执行代码样式）</p><h3 id="what-type-of-modules-does-your-project-use-你的项目使用的模块化标准是" tabindex="-1">? What type of modules does your project use?（你的项目使用的模块化标准是？） ... <a class="header-anchor" href="#what-type-of-modules-does-your-project-use-你的项目使用的模块化标准是" aria-label="Permalink to &quot;? What type of modules does your project use?（你的项目使用的模块化标准是？） ...&quot;">​</a></h3><p>JavaScript modules (import/export)</p><p>CommonJS (require/exports)</p><p>None of these</p><h3 id="which-framework-does-your-project-use-你的项目使用了那种框架" tabindex="-1">? Which framework does your project use?（你的项目使用了那种框架？） ... <a class="header-anchor" href="#which-framework-does-your-project-use-你的项目使用了那种框架" aria-label="Permalink to &quot;? Which framework does your project use?（你的项目使用了那种框架？） ...&quot;">​</a></h3><p>React</p><p>Vue.js</p><p>None of these</p><h3 id="does-your-project-use-typescript-使用了-ts" tabindex="-1">? Does your project use TypeScript? （使用了 ts？） <a class="header-anchor" href="#does-your-project-use-typescript-使用了-ts" aria-label="Permalink to &quot;? Does your project use TypeScript? （使用了 ts？）&quot;">​</a></h3><p>No / Yes</p><h3 id="where-does-your-code-run-项目的运行环境是" tabindex="-1">? Where does your code run? （项目的运行环境是？）... <a class="header-anchor" href="#where-does-your-code-run-项目的运行环境是" aria-label="Permalink to &quot;? Where does your code run? （项目的运行环境是？）...&quot;">​</a></h3><p>√ Browser √ Node</p><h3 id="what-format-do-you-want-your-config-file-to-be-in-eslint-的配置文件生成在哪里" tabindex="-1">? What format do you want your config file to be in? （eslint 的配置文件生成在哪里？）... <a class="header-anchor" href="#what-format-do-you-want-your-config-file-to-be-in-eslint-的配置文件生成在哪里" aria-label="Permalink to &quot;? What format do you want your config file to be in? （eslint 的配置文件生成在哪里？）...&quot;">​</a></h3><p>JavaScript</p><p>YAML</p><p>JSON</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">校验全部文件</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.js</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">校验某个文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">校验全部文件</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.js</span><span style="color:#24292E;"> </span><span style="color:#032F62;">校验某个文件</span></span></code></pre></div><h2 id="自定义规则" tabindex="-1">自定义规则 <a class="header-anchor" href="#自定义规则" aria-label="Permalink to &quot;自定义规则&quot;">​</a></h2><p>​ 查看 eslint 官网进行配置项目规范化规则 ，<a href="https://eslint.nodejs.cn/docs/latest/use/getting-started" target="_blank" rel="noreferrer">点我</a>。</p><h2 id="支持-prettier" tabindex="-1">支持 Prettier <a class="header-anchor" href="#支持-prettier" aria-label="Permalink to &quot;支持 Prettier&quot;">​</a></h2><p>让 <code>ESlint</code> 也用 <code>prettier</code> 的规则来检测代码是否合法。下载 <code>eslint-plugin-prettier</code> <code>eslint-config-prettier</code>。</p><ol><li>安装</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#eslint兼容的插件</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-plugin-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#eslint的prettier</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#eslint兼容的插件</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-plugin-prettier</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#eslint的prettier</span></span></code></pre></div><ol start="2"><li>修改.eslintrc.js 文件:</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;extends&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;prettier&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:prettier/recommended&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;extends&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;prettier&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:prettier/recommended&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="代码风格工具" tabindex="-1">代码风格工具 <a class="header-anchor" href="#代码风格工具" aria-label="Permalink to &quot;代码风格工具&quot;">​</a></h1><p>​ 一般来说我们自己也有给 vscode 安装 Prettier 插件，为什么我们需要单独在项目中集 成呢？就是因为每个人的 Prettier 插件的配置都不一样，就会导致代码风格不统一。</p><h2 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-plugin-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-plugin-prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><p>1.在.eslintrc 中,extend 中添加 &quot;prettier&quot; 解决 eslint 和 prettier 的冲突</p><p>​ 解决方法：因为 eslint-config-prettier 新版本更新之后,只需要写一个 &quot;prettierr&quot; 即可,无需多言指令。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>当我们安装好 prettier 后，可以进行测试，随意创建 test.js 文件，编写格式非常糟糕 的代码，然后运行:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--write</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">est.js</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--write</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">est.js</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--write</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">格式化工程下的全部文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--write</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">est.js</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--write</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">est.js</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--write</span><span style="color:#24292E;"> </span><span style="color:#032F62;">格式化工程下的全部文件</span></span></code></pre></div><p>就会发现代码已经被格式化了，就说明安装成功了！</p><p>若需要自定义配置代码风格，则需要手动创建<code>.prettierrc</code>文件，当然也可以配置 <code>.prettierignore</code> 来新增不想格式化的文件。规则类似于 <code>.gitignore</code>。如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;semi&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;tabWidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;trailingComma&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;none&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;singleQuote&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;arrowParens&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;avoid&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;semi&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;tabWidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;trailingComma&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;none&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;singleQuote&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;arrowParens&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;avoid&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>主要有以下项：</p><ul><li><code>printWidth</code>. 条件允许时每行字符长度大于该值时进行换行（prettier 不会强行换行 ：比如将一个引号包裹的字符串折行）。默认为 80</li><li><code>tabWidth</code>. 缩进空格数；默认为 2</li><li><code>semi</code>. 语句末尾是否带分号</li><li><code>singleQuote</code>. 是否将双引号转换为单引号。双引号里包含单引号时不会被格式化。</li><li><code>quoteProps</code>. 对象属性引号的配置</li><li><code>jsxSingleQuote</code>. jsx 文件里使用单引号</li><li><code>bracketSpacing</code>. 圆括号之间添加空格，如<code>{ a: b }</code></li><li><code>arrowParens</code>. 箭头函数，参数添加圆括号，如<code>(x)=&gt;y</code></li><li><code>parser</code>. 指定解析器，我们一般不需要默认的就行</li></ul><p>全部配置项：<a href="https://prettier.io/docs/en/options.html" target="_blank" rel="noreferrer">https://prettier.io/docs/en/options.html</a></p><h1 id="样式检查工具" tabindex="-1">样式检查工具 <a class="header-anchor" href="#样式检查工具" aria-label="Permalink to &quot;样式检查工具&quot;">​</a></h1><p>stylelint，是一个 CSS 规范化检查工具。</p><h2 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-standard</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-standard</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>stylelint —— css 的 lint 工具</p><p>stylelint-config-standard —— 官方内置一些标准规则，搭配 extends 使用，可以检查 sass、less 或者 vue 中的 style 部分的代码。</p><p>stylelint-config-prettier —— 抹平与 prettier 的格式化冲突问题，搭配 extends 使用</p><h2 id="配置-1" tabindex="-1">配置 <a class="header-anchor" href="#配置-1" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>使用 stylelint 检测器需要一个<code>配置对象</code>，你可以使用三种方式来创建这个对象。</p><ul><li><code>package.json</code> 中的 stylelint 属性。</li><li><code>.stylelintrc.js</code>文件</li><li><code>stylelint.config.js</code> 文件输出的 js 对象</li></ul><p>一旦发现它们中的任何一个，将不再继续进行查找，进行解析，将使用解析后的对象。 本 次使用的是<code>.stylelintrc.js</code> 文件来进行配置。</p><p>创建<code>.sytlelintrc.js</code>，并写入以下内容：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: </span><span style="color:#9ECBFF;">&quot;stylelint-config-standard&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  extends: </span><span style="color:#032F62;">&quot;stylelint-config-standard&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>创建好后即可使用<code>npx stylelint &quot;**/*.css&quot;</code>来进行测试是否安装配置成功，也可以使 用<code>npx stylelint &quot;**/*.scss&quot;</code>来处理所有 scss 文件。</p><h2 id="使用-1" tabindex="-1">使用 <a class="header-anchor" href="#使用-1" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>安装官方文档的说法你可以按照以下方法运行 stylelint 检测样式代码。</p><p><code>--fix</code> 用来自动修复，但不能修复所有的问题，注意只能检查 css 文件。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// package.json</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">:{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;lint:css&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;stylelint src/**/*.css --fix&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;lint:css&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;stylelint 你的文件夹 --fix&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// package.json</span></span>
<span class="line"><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;lint:css&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;stylelint src/**/*.css --fix&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;lint:css&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;stylelint 你的文件夹 --fix&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="自定义-css-属性顺序" tabindex="-1">自定义 CSS 属性顺序 <a class="header-anchor" href="#自定义-css-属性顺序" aria-label="Permalink to &quot;自定义 CSS 属性顺序&quot;">​</a></h2><p>想让 stylelint 帮我们为 css 属性排序？比如让宽高排在最前面？不妨试 试<code>stylelint-order</code>是用来在格式化 css 文件时对代码的属性进行排序。</p><p>安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-order</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-order</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>配置</p><p>​ 在<code>stylelintrc.js</code>中配置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 为stylelint安装stylelint-order插件</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span><span style="color:#9ECBFF;">&quot;stylelint-order&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: </span><span style="color:#9ECBFF;">&quot;stylelint-config-standard&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;order/properties-order&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 规则顺序，可以自己随意定义</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;position&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;top&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;right&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;bottom&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;left&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;z-index&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;display&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;float&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;width&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;height&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;max-width&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;max-height&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;min-width&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;min-height&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;padding&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;padding-top&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;padding-right&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;padding-bottom&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;padding-left&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-top&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-right&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-bottom&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-left&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-collapse&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-top-collapse&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-right-collapse&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-bottom-collapse&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;margin-left-collapse&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;overflow&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;overflow-x&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;overflow-y&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;clip&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;clear&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font-family&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font-size&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font-smoothing&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;osx-font-smoothing&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font-style&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;font-weight&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;line-height&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;letter-spacing&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;word-spacing&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;color&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-align&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-decoration&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-indent&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-overflow&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-rendering&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-size-adjust&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-shadow&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;text-transform&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;word-break&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;word-wrap&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;white-space&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;vertical-align&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;list-style&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;list-style-type&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;list-style-position&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;list-style-image&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;pointer-events&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;cursor&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;background&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;background-color&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;border&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;border-radius&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;content&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;outline&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;outline-offset&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;opacity&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;filter&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;visibility&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;size&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;transform&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 为stylelint安装stylelint-order插件</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span><span style="color:#032F62;">&quot;stylelint-order&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  extends: </span><span style="color:#032F62;">&quot;stylelint-config-standard&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  rules: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;order/properties-order&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 规则顺序，可以自己随意定义</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;position&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;top&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;bottom&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;left&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;z-index&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;display&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;float&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;width&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;height&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;max-width&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;max-height&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;min-width&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;min-height&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;padding&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;padding-top&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;padding-right&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;padding-bottom&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;padding-left&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-top&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-right&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-bottom&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-left&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-collapse&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-top-collapse&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-right-collapse&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-bottom-collapse&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;margin-left-collapse&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;overflow&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;overflow-x&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;overflow-y&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;clip&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;clear&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font-family&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font-size&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font-smoothing&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;osx-font-smoothing&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font-style&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;font-weight&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;line-height&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;letter-spacing&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;word-spacing&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;color&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-align&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-decoration&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-indent&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-overflow&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-rendering&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-size-adjust&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-shadow&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;text-transform&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;word-break&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;word-wrap&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;white-space&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;vertical-align&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;list-style&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;list-style-type&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;list-style-position&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;list-style-image&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;pointer-events&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;cursor&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;background&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;background-color&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;border&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;border-radius&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;outline&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;outline-offset&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;opacity&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;filter&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;visibility&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;size&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;transform&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="忽略-stylelint-对-css-的检验" tabindex="-1">忽略 stylelint 对 css 的检验 <a class="header-anchor" href="#忽略-stylelint-对-css-的检验" aria-label="Permalink to &quot;忽略 stylelint 对 css 的检验&quot;">​</a></h2><ol><li>忽略整个文件，在首行加入 <code>/* stylelint-disable */</code></li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* stylelint-disable */</span></span>
<span class="line"><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* stylelint-disable */</span></span>
<span class="line"><span style="color:#22863A;">html</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="2"><li>忽略多行</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* stylelint-disable */</span></span>
<span class="line"><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.div</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">red</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* stylelint-enable */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* stylelint-disable */</span></span>
<span class="line"><span style="color:#22863A;">html</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.div</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* stylelint-enable */</span></span></code></pre></div><ol start="3"><li>忽略一行， 在样式前加入 <code>/* stylelint-disable-next-line */</code> 以忽略该行</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">#id</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* stylelint-disable-next-line */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">pink</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!important</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">#id</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* stylelint-disable-next-line */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">pink</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!important</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="4"><li>在 <code>.stylelintrc.js</code> 內设定需要忽略的文件</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ignoreFiles</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;dist/**/*&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;src/assets/scss/abc.scss&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ignoreFiles</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;dist/**/*&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;src/assets/scss/abc.scss&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="git-规范" tabindex="-1">git 规范 <a class="header-anchor" href="#git-规范" aria-label="Permalink to &quot;git 规范&quot;">​</a></h1><p>​ 在代码提交时，若项目代码没有按照格式化、规范化检查就提交到了仓库里面去，那岂不 是我们前面的配置不都没用了吗，所以就有了 git 规范。</p><p>​ 其中包含了：</p><ul><li><strong>husky</strong><ul><li>操作 git 钩子的工具</li></ul></li><li><strong>lint-staged</strong><ul><li>本地暂存代码检查工具</li></ul></li><li><strong>commitlint</strong><ul><li>commit 信息校验工具</li></ul></li><li><strong>commitizen</strong><ul><li>辅助 commit 信息 ,就像这样,通过选择输入,规范提交信息</li></ul></li></ul><h2 id="husky" tabindex="-1">husky <a class="header-anchor" href="#husky" aria-label="Permalink to &quot;husky&quot;">​</a></h2><p>​ husky 可以让我们在提交代码时做一些额外操作，如代码格式化，代码规范化检查，提交 注释是否符合规范等等功能。husky 就是基于 git hooks 在不同时间点执行不同的操作， 例如：</p><ul><li><code>pre-commit</code>：代码提交之前触发，可以通过此钩子判断代码是否符合规范。</li><li><code>commit-msg</code>：对 commit 的信息校验，可以通过此钩子判定 commit 是否合法。</li><li><code>pre-push</code>： 代码提交之前触发，可以通过此钩子对业务代码执行一些测试。</li></ul><h3 id="安装-3" tabindex="-1">安装 <a class="header-anchor" href="#安装-3" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">husky</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">husky</span></span></code></pre></div><p>安装好后，执行<code>npx husky install</code>来初始化<code>husky</code>，执行之后则会创建.husky 文件夹 ，其中包含了一些基本的配置。在执行该命令前该仓库必须被 git 管理。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">husky</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">husky</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span></code></pre></div><p>为了保证其他开发者拉取代码时能够初始化 husky，由于 husky 只在本地起作用，所以我 们需要在 package.json 中添加该脚本，保证一安装项目依赖时保证 husky 被初始化。</p><p>只要执行<code>pnpm install</code>就会安装依赖，并执行<code>prepare</code>脚本，初始化 husky</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;prepare&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;git init &amp;&amp; husky install&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;prepare&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;git init &amp;&amp; husky install&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="git-hooks" tabindex="-1">git hooks <a class="header-anchor" href="#git-hooks" aria-label="Permalink to &quot;git hooks&quot;">​</a></h3><p><a href="https://link.juejin.cn?target=https%3A%2F%2Fgit-scm.com%2Fbook%2Fzh%2Fv2%2F%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90" target="_blank" rel="noreferrer">git hooks</a> 的分类如下</p><ul><li>客户端 hooks <ul><li>提交工作流 <ul><li><code>pre-commit</code></li><li><code>prepare-commit-msg</code></li><li><code>commit-msg</code></li><li><code>post-commit</code></li></ul></li><li>email 工作流 <ul><li><code>applypatch-msg</code></li><li><code>pre-applypatch</code></li><li><code>post-applypatch</code></li></ul></li><li>其它 <ul><li><code>pre-rebase</code></li><li><code>post-rewrite</code></li><li><code>post-checkout</code></li><li><code>post-merge</code></li><li><code>pre-push</code></li><li><code>pre-auto-gc</code></li></ul></li></ul></li><li>服务器端 hooks <ul><li><code>pre-receive</code></li><li><code>update</code></li><li><code>post-receive</code></li></ul></li></ul><h3 id="使用-2" tabindex="-1">使用 <a class="header-anchor" href="#使用-2" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>使用 husky 的时候，我们通常只关注 <em>提交工作流</em> 的几个 hooks，用得最多的一个是 <code>pre-commit</code>，pre-commit 会在本地 commit 时会触发该钩子。</p><p>使用 hosky 的时候，通常是用它来创建一系列的 git hooks，并在对应的文件中撰写 <code>shell</code> 脚本代码。</p><p>下面是官方示例中的一个，创建了 <code>pre-commit</code> hook 文件：</p><div class="language-sheel vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sheel</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npx husky add .husky/pre-commit &quot;npm test&quot; # npm</span></span>
<span class="line"><span style="color:#e1e4e8;">pnpx husky add .husky/pre-commit &quot;npm test&quot; # pnpm</span></span>
<span class="line"><span style="color:#e1e4e8;">pnpx husky add .husky/pre-commit # 为空，可以自己到对应文件中编写</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npx husky add .husky/pre-commit &quot;npm test&quot; # npm</span></span>
<span class="line"><span style="color:#24292e;">pnpx husky add .husky/pre-commit &quot;npm test&quot; # pnpm</span></span>
<span class="line"><span style="color:#24292e;">pnpx husky add .husky/pre-commit # 为空，可以自己到对应文件中编写</span></span></code></pre></div><p>例如:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env sh</span></span>
<span class="line"><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">dirname</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">--</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#79B8FF;">$0</span><span style="color:#9ECBFF;">&quot;)/_/husky.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># pnpm eslint 为自己编写的脚本，每当提交代码commit时就会执行该脚本中的内容。</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env sh</span></span>
<span class="line"><span style="color:#005CC5;">.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">dirname</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">--</span><span style="color:#032F62;"> &quot;</span><span style="color:#005CC5;">$0</span><span style="color:#032F62;">&quot;)/_/husky.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># pnpm eslint 为自己编写的脚本，每当提交代码commit时就会执行该脚本中的内容。</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint</span></span></code></pre></div><h2 id="lint-staged" tabindex="-1">lint-staged <a class="header-anchor" href="#lint-staged" aria-label="Permalink to &quot;lint-staged&quot;">​</a></h2><p>​ lint-staged 只检查暂存区的文件。当我们使用 husky 的钩子执行某些操作时会发现 Perttier 会对项目所有的文件进行格式化，但起始我们仅仅只需要对有改动的文件进行检 查即可，因为贮存区中的文件早就被格式化过的代码，但依旧被校验就会很浪费时间，所以 lint-staged 可以帮助我们解决该问题。</p><h3 id="安装-4" tabindex="-1">安装 <a class="header-anchor" href="#安装-4" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lint-staged</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lint-staged</span></span></code></pre></div><h3 id="修改-pre-commit-钩子文件-重要" tabindex="-1">修改 pre-commit 钩子文件(重要) <a class="header-anchor" href="#修改-pre-commit-钩子文件-重要" aria-label="Permalink to &quot;修改 pre-commit 钩子文件(重要)&quot;">​</a></h3><p>将 pre-commit 钩子执行的脚本替成<code>npx lint-staged</code>，这样<code>lint-staged</code>才会生效。</p><h3 id="配置-2" tabindex="-1">配置 <a class="header-anchor" href="#配置-2" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>下面的命令直接关系到<code>npx lint-staged</code>会执行哪些命令。</p><p>方法 1：</p><p>根目录下新建文件**.lintstagedrc.json**</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//检验规则举例，具体检验什么文件哪些路径看团队需求</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//对src目录下所有文件校验</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;npx prettier --write&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;src/**/*.{js,cjs,ts,vue}&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;npx eslint --fix&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//只对根目录的所有文件校验，不涉及文件夹</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;./*.{js,cjs,ts,html,json}&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;npx prettier --write&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;./*.{js,cjs,ts}&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;npx eslint --fix&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//检验规则举例，具体检验什么文件哪些路径看团队需求</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//对src目录下所有文件校验</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;npx prettier --write&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;src/**/*.{js,cjs,ts,vue}&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;npx eslint --fix&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//只对根目录的所有文件校验，不涉及文件夹</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;./*.{js,cjs,ts,html,json}&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;npx prettier --write&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;./*.{js,cjs,ts}&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;npx eslint --fix&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>方法 2：</p><p>直接在 package.json 添加如下对象</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;lint-staged&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;src/**/*.{js,cjs,ts,vue}&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;./*.{js,cjs,ts,html,json}&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;./*.{js,cjs,ts}&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;lint-staged&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;src/**/*.{js,cjs,ts,vue}&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;./*.{js,cjs,ts,html,json}&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;./*.{js,cjs,ts}&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span></code></pre></div><h2 id="commitlint" tabindex="-1">commitlint <a class="header-anchor" href="#commitlint" aria-label="Permalink to &quot;commitlint&quot;">​</a></h2><p>commitlint 会对 git commit 中的注释部分进行检查，若不符合规范，禁止本次提交。</p><p><a href="https://commitlint.js.org/#/guides-local-setup?id=install-commitlint" target="_blank" rel="noreferrer">https://commitlint.js.org/#/guides-local-setup?id=install-commitlint</a></p><h3 id="安装-5" tabindex="-1">安装 <a class="header-anchor" href="#安装-5" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@commitlint/config-conventional</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@commitlint/cli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@commitlint/config-conventional</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@commitlint/cli</span></span></code></pre></div><h3 id="增加钩子" tabindex="-1">增加钩子 <a class="header-anchor" href="#增加钩子" aria-label="Permalink to &quot;增加钩子&quot;">​</a></h3><p>commit-msg 钩子执行 消息校验</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">husky</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.husky/commit-msg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;npx commitlint --edit $1&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">husky</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.husky/commit-msg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;npx commitlint --edit $1&#39;</span></span></code></pre></div><p><code>commitlint --edit &lt;文件名&gt;</code>：执行 commitlint 命令行工具，并使用 <code>--edit</code> 选项， 从一个文件里提取 commit 内容来进行校验。校验规则由 <code>commitlint.config.js</code> 配置文 件来指定 ，<a href="https://link.juejin.cn?target=https%3A%2F%2Fcommitlint.js.org%2F%23%2Freference-cli%3Fid%3Dcli" target="_blank" rel="noreferrer">reference-cli</a></p><p><code>$1</code>：在新版的 husky 中 <code>$HUSKY_GIT_PARAMS</code> 变量已不再使用，取而代之是 <code>$1</code> ，<a href="https://link.juejin.cn?target=https%3A%2F%2Ftypicode.github.io%2Fhusky%2F%23%2F%3Fid%3Dhusky_git_params-ie-commitlint-" target="_blank" rel="noreferrer">文档地址</a></p><h3 id="配置-3" tabindex="-1">配置 <a class="header-anchor" href="#配置-3" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>由于上述钩子指定了会在提交代码时会执行<code>npx commitlint --edit $1</code>，commitlint 会 根据<code>commitlint.config.js</code>中的规则来检查消息是否规范，所以我们需要手动创 建<code>commitlint.config.js</code>文件。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 规则将继承与@commitlint/config-conventional</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: [</span><span style="color:#9ECBFF;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 规则将继承与@commitlint/config-conventional</span></span>
<span class="line"><span style="color:#24292E;">  extends: [</span><span style="color:#032F62;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>同时需要修改 eslint 的配置项，若 eslint 设置了代码只会在浏览器中运行的话将不会支 持 cmd，所以需要增加 node 选项，否则 eslint 将无法通过。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  env: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    node: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    browser: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    es2021: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  env: {</span></span>
<span class="line"><span style="color:#24292E;">    node: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    browser: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    es2021: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>当然也可以在 commitlint.config.js 中引入 eslint 注释即可。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 规则将继承与@commitlint/config-conventional</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: [</span><span style="color:#9ECBFF;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* eslint-env node */</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 规则将继承与@commitlint/config-conventional</span></span>
<span class="line"><span style="color:#24292E;">  extends: [</span><span style="color:#032F62;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="默认提交规范" tabindex="-1">默认提交规范 <a class="header-anchor" href="#默认提交规范" aria-label="Permalink to &quot;默认提交规范&quot;">​</a></h3><p>​ 配置好就可以尝试提交了，不过此时的提交检查是默认的检查规则，默认提交格式:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git commit -m &lt;type&gt;[optional scope]: &lt;description&gt; //注意冒号后面有空格</span></span>
<span class="line"><span style="color:#e1e4e8;">- type：提交的改动类型（如新增、修改、更新等）</span></span>
<span class="line"><span style="color:#e1e4e8;">- optional scope：标识此次提交主要涉及到代码中哪个模块</span></span>
<span class="line"><span style="color:#e1e4e8;">- description：一句话描述此次提交的主要内容</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git commit -m &lt;type&gt;[optional scope]: &lt;description&gt; //注意冒号后面有空格</span></span>
<span class="line"><span style="color:#24292e;">- type：提交的改动类型（如新增、修改、更新等）</span></span>
<span class="line"><span style="color:#24292e;">- optional scope：标识此次提交主要涉及到代码中哪个模块</span></span>
<span class="line"><span style="color:#24292e;">- description：一句话描述此次提交的主要内容</span></span></code></pre></div><p><strong>常用 type</strong></p><table><thead><tr><th>type</th><th>描述</th></tr></thead><tbody><tr><td>feat</td><td>新增功能</td></tr><tr><td>fix</td><td>bug 修复</td></tr><tr><td>style</td><td>不影响程序逻辑的代码修改(修改空白字符，补全缺失的分号等)</td></tr><tr><td>refactor</td><td>重构代码(既没有新增功能，也没有修复 bug)</td></tr><tr><td>docs</td><td>文档更新</td></tr><tr><td>test</td><td>增加测试</td></tr><tr><td>chore</td><td>构建过程或辅助工具的变动</td></tr></tbody></table><p>例如:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;feat: 增加 xxx 功能&#39;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;bug: 修复 xxx 功能&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;feat: 增加 xxx 功能&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;bug: 修复 xxx 功能&#39;</span></span></code></pre></div><h3 id="自定义提交规范" tabindex="-1">自定义提交规范 <a class="header-anchor" href="#自定义提交规范" aria-label="Permalink to &quot;自定义提交规范&quot;">​</a></h3><p>输入命令创建配置文件（在根目录）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}; &quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commitlint.config.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}; &quot;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commitlint.config.js</span></span></code></pre></div><p><strong>rule 配置</strong></p><p>rule 由<strong>name</strong>和<strong>配置数组</strong>组成，如：<code>&#39;name:[0, &#39;always&#39;, 72]&#39;</code></p><p>数组第一位，参数设置错误级别</p><ul><li>0：<code>disable</code></li><li>1：<code>warning</code></li><li>2：<code>error</code></li></ul><p>数组第二位，是否应用</p><ul><li>always</li><li>never</li></ul><p>数组第三位，rule 的值</p><blockquote><p>具体规则参考 👉 <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fconventional-changelog%2Fcommitlint%2Fblob%2Fmaster%2Fdocs%2Freference-rules.md" target="_blank" rel="noreferrer">更多</a></p><p>关于配置文件 👉 <a href="https://juejin.cn/post/7062698936749785101#heading-7" target="_blank" rel="noreferrer">更多</a></p></blockquote><p>例子:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: [</span><span style="color:#9ECBFF;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  rules: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;type-case&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;always&quot;</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&quot;lower-case&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;upper-case&quot;</span><span style="color:#E1E4E8;">]],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;type-enum&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;always&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;feat&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;fix&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;docs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;style&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;refactor&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;perf&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;chore&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;revert&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  extends: [</span><span style="color:#032F62;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  rules: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;type-case&quot;</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;always&quot;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&quot;lower-case&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;upper-case&quot;</span><span style="color:#24292E;">]],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;type-enum&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;always&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;feat&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;fix&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;docs&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;style&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;refactor&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;perf&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;chore&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;revert&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      ],</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>参考资料：</p><p><a href="https://link.juejin.cn?target=https%3A%2F%2Fcommitlint.js.org%2F%23%2Fguides-local-setup" target="_blank" rel="noreferrer">commitlint 文档</a></p><p><a href="https://link.juejin.cn?target=https%3A%2F%2Ftypicode.github.io%2Fhusky%2F%23%2F%3Fid%3Dfeatures" target="_blank" rel="noreferrer">husky 文档</a></p><h2 id="commitizen-非必须" tabindex="-1">commitizen（非必须） <a class="header-anchor" href="#commitizen-非必须" aria-label="Permalink to &quot;commitizen（非必须）&quot;">​</a></h2><p>​ commitize 可以辅助我们设置代码提交的消息，他可以根据项目的提交规则来选择提交类 型，我们只需要写入消息即可。</p><h3 id="安装-6" tabindex="-1">安装 <a class="header-anchor" href="#安装-6" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">安装</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commitizen</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commitizen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">.cz-conventional-changelog用来规范提交信息。</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cz-conventional-changelog</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">.commitizen规范化提交标准</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cz-conventional-changelog-zh中文版的提交规范提示</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cz-conventional-changelog-zh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">安装</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commitizen</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commitizen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">.cz-conventional-changelog用来规范提交信息。</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cz-conventional-changelog</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">.commitizen规范化提交标准</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cz-conventional-changelog-zh中文版的提交规范提示</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cz-conventional-changelog-zh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><h3 id="配置-4" tabindex="-1">配置 <a class="header-anchor" href="#配置-4" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>在 package.json 中增加一个对象，并增加一个脚本。以后提交代码时就可以不适用 git commit 了，而是运行 npm run commit 使用 commitize 辅助我们提交代码。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;">:{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">&quot;commit&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;git-cz&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;config&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;commitizen&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 英文版本</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./node_modules/cz-conventional-changelog&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 中文版本</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./node_modules/cz-conventional-changelog-zh&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">&quot;commit&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;git-cz&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#032F62;">&quot;config&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;commitizen&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 英文版本</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;./node_modules/cz-conventional-changelog&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 中文版本</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;./node_modules/cz-conventional-changelog-zh&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div><h3 id="使用-3" tabindex="-1">使用 <a class="header-anchor" href="#使用-3" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>​ 当运行<code>npm run commit</code>时，则会执行 git-cz 命令，输出一个交互框辅助我们生成提交 信息。</p><p><strong>（1）选择提交类型</strong></p><p><strong>（2）本修改影响的是内容（范围）？可以填文件名</strong></p><p>​ 若写入了内容，则会在 type 后生成作用域名称。例如 feat(user): test</p><p><strong>（3）写一个简短的介绍</strong></p><p><strong>（4）提供一个长的介绍</strong></p><p><strong>（5）本修改是否实现了某个 issues？</strong></p><h3 id="changelog" tabindex="-1">changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;changelog&quot;">​</a></h3><p>使用<strong>conventional-changelog-cli 生成提交日志</strong>，可以快速的浏览提交记录中的所有 信息。</p><h4 id="安装-7" tabindex="-1">安装 <a class="header-anchor" href="#安装-7" aria-label="Permalink to &quot;安装&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">conventional-changelog-cli</span></span>
<span class="line"><span style="color:#6A737D;"># 根目录下在创建CHANGELOG.md文件</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">CHANGELOG.md</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">conventional-changelog-cli</span></span>
<span class="line"><span style="color:#6A737D;"># 根目录下在创建CHANGELOG.md文件</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CHANGELOG.md</span></span></code></pre></div><h4 id="配置-5" tabindex="-1">配置 <a class="header-anchor" href="#配置-5" aria-label="Permalink to &quot;配置&quot;">​</a></h4><p>在 package.json 中新增脚本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">&quot;script&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">&quot;changelog&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;conventional-changelog -p angular -i CHANGELOG.md -s&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">&quot;script&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">&quot;changelog&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;conventional-changelog -p angular -i CHANGELOG.md -s&quot;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="使用-4" tabindex="-1">使用 <a class="header-anchor" href="#使用-4" aria-label="Permalink to &quot;使用&quot;">​</a></h4><p>首次执行:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">conventional-changelog -p angular -i CHANGELOG.md -s -r 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">conventional-changelog -p angular -i CHANGELOG.md -s -r 0</span></span></code></pre></div><p>执行:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">changelog</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">changelog</span></span></code></pre></div><h1 id="在-vite-中集成规范化" tabindex="-1">在 vite 中集成规范化 <a class="header-anchor" href="#在-vite-中集成规范化" aria-label="Permalink to &quot;在 vite 中集成规范化&quot;">​</a></h1><h2 id="eslint" tabindex="-1">eslint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;eslint&quot;">​</a></h2><h3 id="安装-8" tabindex="-1">安装 <a class="header-anchor" href="#安装-8" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p>安装后，依旧使用<code>npx eslint install</code>来初始化 eslint 配置项以及安装相关插件。</p><h3 id="集成-vite" tabindex="-1">集成 vite <a class="header-anchor" href="#集成-vite" aria-label="Permalink to &quot;集成 vite&quot;">​</a></h3><p>让 eslint 相关报错出现在 vite 项目的错误窗口中。</p><ol><li>安装：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vite-plugin-eslint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@babel/core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@babel/eslint-parser</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vite-plugin-eslint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/eslint-parser</span></span></code></pre></div><ol start="2"><li>配置 vite.config.ts 文件</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vite&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@vitejs/plugin-vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> eslintPlugin </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vite-plugin-eslint&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">vue</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">eslintPlugin</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      include: [</span><span style="color:#9ECBFF;">&quot;src/**/*.ts&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;src/**/*.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;src/*.ts&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;src/*.vue&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vite&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@vitejs/plugin-vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> eslintPlugin </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vite-plugin-eslint&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">vue</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">eslintPlugin</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      include: [</span><span style="color:#032F62;">&quot;src/**/*.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;src/**/*.vue&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;src/*.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;src/*.vue&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    }),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="增加脚本" tabindex="-1">增加脚本 <a class="header-anchor" href="#增加脚本" aria-label="Permalink to &quot;增加脚本&quot;">​</a></h3><p>在 package.json 中添加该命令:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;lint:eslint&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;eslint . --fix&quot;</span><span style="color:#E1E4E8;">,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;lint:eslint&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;eslint . --fix&quot;</span><span style="color:#24292E;">,</span></span></code></pre></div><h2 id="prettier" tabindex="-1">prettier <a class="header-anchor" href="#prettier" aria-label="Permalink to &quot;prettier&quot;">​</a></h2><h3 id="安装-9" tabindex="-1">安装 <a class="header-anchor" href="#安装-9" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prettier</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#eslint兼容的插件</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eslint-plugin-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#eslint的prettier</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prettier</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#eslint兼容的插件</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eslint-plugin-prettier</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#eslint的prettier</span></span></code></pre></div><h3 id="配置-6" tabindex="-1">配置 <a class="header-anchor" href="#配置-6" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>在根目录下面添加<code>.prettierrc.cjs</code>文件夹，然后将下面的配置添加到其中。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** .prettierrc.js</span></span>
<span class="line"><span style="color:#6A737D;"> * 在VSCode中安装prettier插件 打开插件配置填写\`.prettierrc.js\` 将本文件作为其代码格式化规范</span></span>
<span class="line"><span style="color:#6A737D;"> * 在本文件中修改格式化规则，不会同时触发改变ESLint代码检查，所以每次修改本文件需要重启VSCode，ESLint检查才能同步代码格式化</span></span>
<span class="line"><span style="color:#6A737D;"> * 需要相应的代码格式化规范请自行查阅配置，下面为默认项目配置</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 一行最多多少个字符</span></span>
<span class="line"><span style="color:#E1E4E8;">  printWidth: </span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 指定每个缩进级别的空格数</span></span>
<span class="line"><span style="color:#E1E4E8;">  tabWidth: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 使用制表符而不是空格缩进行</span></span>
<span class="line"><span style="color:#E1E4E8;">  useTabs: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 在语句末尾是否需要分号</span></span>
<span class="line"><span style="color:#E1E4E8;">  semi: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 是否使用单引号</span></span>
<span class="line"><span style="color:#E1E4E8;">  singleQuote: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 更改引用对象属性的时间 可选值&quot;&lt;as-needed|consistent|preserve&gt;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  quoteProps: </span><span style="color:#9ECBFF;">&quot;as-needed&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 在JSX中使用单引号而不是双引号</span></span>
<span class="line"><span style="color:#E1E4E8;">  jsxSingleQuote: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 多行时尽可能打印尾随逗号。（例如，单行数组永远不会出现逗号结尾。） 可选值&quot;&lt;none|es5|all&gt;&quot;，默认none</span></span>
<span class="line"><span style="color:#E1E4E8;">  trailingComma: </span><span style="color:#9ECBFF;">&quot;es5&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 在对象文字中的括号之间打印空格</span></span>
<span class="line"><span style="color:#E1E4E8;">  bracketSpacing: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// jsx 标签的反尖括号需要换行</span></span>
<span class="line"><span style="color:#E1E4E8;">  jsxBracketSameLine: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 在单独的箭头函数参数周围包括括号 always：(x) =&gt; x \\ avoid：x =&gt; x</span></span>
<span class="line"><span style="color:#E1E4E8;">  arrowParens: </span><span style="color:#9ECBFF;">&quot;always&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码</span></span>
<span class="line"><span style="color:#E1E4E8;">  rangeStart: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  rangeEnd: </span><span style="color:#79B8FF;">Infinity</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 指定要使用的解析器，不需要写文件开头的 @prettier</span></span>
<span class="line"><span style="color:#E1E4E8;">  requirePragma: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 不需要自动在文件开头插入 @prettier</span></span>
<span class="line"><span style="color:#E1E4E8;">  insertPragma: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 使用默认的折行标准 always\\never\\preserve</span></span>
<span class="line"><span style="color:#E1E4E8;">  proseWrap: </span><span style="color:#9ECBFF;">&quot;preserve&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 指定HTML文件的全局空格敏感度 css\\strict\\ignore</span></span>
<span class="line"><span style="color:#E1E4E8;">  htmlWhitespaceSensitivity: </span><span style="color:#9ECBFF;">&quot;css&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Vue文件脚本和样式标签缩进</span></span>
<span class="line"><span style="color:#E1E4E8;">  vueIndentScriptAndStyle: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//在 windows 操作系统中换行符通常是回车 (CR) 加换行分隔符 (LF)，也就是回车换行(CRLF)，</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//然而在 Linux 和 Unix 中只使用简单的换行分隔符 (LF)。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//对应的控制字符为 &quot;\\n&quot; (LF) 和 &quot;\\r\\n&quot;(CRLF)。auto意为保持现有的行尾</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 换行符使用 lf 结尾是 可选值&quot;&lt;auto|lf|crlf|cr&gt;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  endOfLine: </span><span style="color:#9ECBFF;">&quot;auto&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** .prettierrc.js</span></span>
<span class="line"><span style="color:#6A737D;"> * 在VSCode中安装prettier插件 打开插件配置填写\`.prettierrc.js\` 将本文件作为其代码格式化规范</span></span>
<span class="line"><span style="color:#6A737D;"> * 在本文件中修改格式化规则，不会同时触发改变ESLint代码检查，所以每次修改本文件需要重启VSCode，ESLint检查才能同步代码格式化</span></span>
<span class="line"><span style="color:#6A737D;"> * 需要相应的代码格式化规范请自行查阅配置，下面为默认项目配置</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 一行最多多少个字符</span></span>
<span class="line"><span style="color:#24292E;">  printWidth: </span><span style="color:#005CC5;">150</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 指定每个缩进级别的空格数</span></span>
<span class="line"><span style="color:#24292E;">  tabWidth: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 使用制表符而不是空格缩进行</span></span>
<span class="line"><span style="color:#24292E;">  useTabs: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 在语句末尾是否需要分号</span></span>
<span class="line"><span style="color:#24292E;">  semi: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 是否使用单引号</span></span>
<span class="line"><span style="color:#24292E;">  singleQuote: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 更改引用对象属性的时间 可选值&quot;&lt;as-needed|consistent|preserve&gt;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  quoteProps: </span><span style="color:#032F62;">&quot;as-needed&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 在JSX中使用单引号而不是双引号</span></span>
<span class="line"><span style="color:#24292E;">  jsxSingleQuote: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 多行时尽可能打印尾随逗号。（例如，单行数组永远不会出现逗号结尾。） 可选值&quot;&lt;none|es5|all&gt;&quot;，默认none</span></span>
<span class="line"><span style="color:#24292E;">  trailingComma: </span><span style="color:#032F62;">&quot;es5&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 在对象文字中的括号之间打印空格</span></span>
<span class="line"><span style="color:#24292E;">  bracketSpacing: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// jsx 标签的反尖括号需要换行</span></span>
<span class="line"><span style="color:#24292E;">  jsxBracketSameLine: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 在单独的箭头函数参数周围包括括号 always：(x) =&gt; x \\ avoid：x =&gt; x</span></span>
<span class="line"><span style="color:#24292E;">  arrowParens: </span><span style="color:#032F62;">&quot;always&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码</span></span>
<span class="line"><span style="color:#24292E;">  rangeStart: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  rangeEnd: </span><span style="color:#005CC5;">Infinity</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 指定要使用的解析器，不需要写文件开头的 @prettier</span></span>
<span class="line"><span style="color:#24292E;">  requirePragma: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 不需要自动在文件开头插入 @prettier</span></span>
<span class="line"><span style="color:#24292E;">  insertPragma: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 使用默认的折行标准 always\\never\\preserve</span></span>
<span class="line"><span style="color:#24292E;">  proseWrap: </span><span style="color:#032F62;">&quot;preserve&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 指定HTML文件的全局空格敏感度 css\\strict\\ignore</span></span>
<span class="line"><span style="color:#24292E;">  htmlWhitespaceSensitivity: </span><span style="color:#032F62;">&quot;css&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Vue文件脚本和样式标签缩进</span></span>
<span class="line"><span style="color:#24292E;">  vueIndentScriptAndStyle: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//在 windows 操作系统中换行符通常是回车 (CR) 加换行分隔符 (LF)，也就是回车换行(CRLF)，</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//然而在 Linux 和 Unix 中只使用简单的换行分隔符 (LF)。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//对应的控制字符为 &quot;\\n&quot; (LF) 和 &quot;\\r\\n&quot;(CRLF)。auto意为保持现有的行尾</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 换行符使用 lf 结尾是 可选值&quot;&lt;auto|lf|crlf|cr&gt;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  endOfLine: </span><span style="color:#032F62;">&quot;auto&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="增加脚本-1" tabindex="-1">增加脚本 <a class="header-anchor" href="#增加脚本-1" aria-label="Permalink to &quot;增加脚本&quot;">​</a></h3><p>在 package.json 中添加该命令:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;lint:prettier&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;prettier . --write --fix&quot;</span><span style="color:#E1E4E8;">,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;lint:prettier&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;prettier . --write --fix&quot;</span><span style="color:#24292E;">,</span></span></code></pre></div><h2 id="eslint-prettier" tabindex="-1">eslint+prettier <a class="header-anchor" href="#eslint-prettier" aria-label="Permalink to &quot;eslint+prettier&quot;">​</a></h2><p>配置完成<code>prettier</code>肯定会和<code>eslint</code>发生冲突，所以接下来要调整一下<code>.eslintrc.js</code>文 件，通过几个扩展，来完成<code>vue3、ts、prettier</code>的规则和<code>eslint</code>插件结合使用，配置如 下面代码所示。 Vue3 的 setup 语法糖中有几个宏定义，如果不声明直接引用会报错，这 里可以在配置文件中加入<code>globals</code>配置项（如下所示），通过全局声明这几个宏定义，就 可以直接使用这几个函数不用再提前声明了，<code>eslint</code>检查也会正常通过。 可以看到配置 文件中有<code>p<wbr>rocess.env.NODE_ENV</code>，这是一个<code>node</code>环境变量，使用过程可能会报错，这里 安装<code>@types/node</code>(<code>npm i -D @types/node</code>)插件，就可以在全局使用<code>process</code>这个参数 了，我们这里主要用于区分开发和生产环境，下面配置就是开发环境允许使 用<code>console.log()</code>，而生产环境不能使用，如果构建包的过程中代码含 有<code>console.log()</code>，会导致构建失败，请删除 log 后再打包。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  env: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    browser: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    es2021: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    node: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  extends: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;eslint-config-prettier&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;eslint:recommended&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 使用推荐的eslint</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:@typescript-eslint/recommended&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:vue/vue3-recommended&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 使用插件支持vue3</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:vue/vue3-essential&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 1.继承.prettierrc.js文件规则</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 2.开启rules的 &quot;prettier/prettier&quot;: &quot;error&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 3.eslint fix的同时执行prettier格式化</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;plugin:prettier/recommended&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  overrides: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      env: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        node: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      files: [</span><span style="color:#9ECBFF;">&quot;.eslintrc.{js,cjs}&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      parserOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        sourceType: </span><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  parserOptions: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ecmaVersion: </span><span style="color:#9ECBFF;">&quot;latest&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    parser: </span><span style="color:#9ECBFF;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    sourceType: </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span><span style="color:#9ECBFF;">&quot;@typescript-eslint&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  rules: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  env: {</span></span>
<span class="line"><span style="color:#24292E;">    browser: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    es2021: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    node: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  extends: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;eslint-config-prettier&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;eslint:recommended&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 使用推荐的eslint</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:@typescript-eslint/recommended&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:vue/vue3-recommended&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 使用插件支持vue3</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:vue/vue3-essential&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 1.继承.prettierrc.js文件规则</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 2.开启rules的 &quot;prettier/prettier&quot;: &quot;error&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 3.eslint fix的同时执行prettier格式化</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;plugin:prettier/recommended&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  overrides: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      env: {</span></span>
<span class="line"><span style="color:#24292E;">        node: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      files: [</span><span style="color:#032F62;">&quot;.eslintrc.{js,cjs}&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      parserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">        sourceType: </span><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  parserOptions: {</span></span>
<span class="line"><span style="color:#24292E;">    ecmaVersion: </span><span style="color:#032F62;">&quot;latest&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    parser: </span><span style="color:#032F62;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    sourceType: </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span><span style="color:#032F62;">&quot;@typescript-eslint&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  rules: {},</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="stylelint" tabindex="-1">stylelint <a class="header-anchor" href="#stylelint" aria-label="Permalink to &quot;stylelint&quot;">​</a></h2><p>​ 在 vite+vue+scss 项目中集成 stylelint 可以帮助我们格式化 css 代码、设置 css 属 性的排序规则。</p><h3 id="安装-10" tabindex="-1">安装 <a class="header-anchor" href="#安装-10" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-recommended-scss</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-recommended-vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-standard</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-standard-scss</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-recess-order</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">postcss</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">postcss-html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stylelint-config-prettier</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-recommended-scss</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-recommended-vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-standard</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-standard-scss</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-recess-order</span><span style="color:#24292E;"> </span><span style="color:#032F62;">postcss</span><span style="color:#24292E;"> </span><span style="color:#032F62;">postcss-html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stylelint-config-prettier</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>说明：</p><p>stylelint：stylelint 核心库</p><p>stylelint-config-htmlStylelint ：的可共享 HTML（和类似 HTML）配置，捆绑 postcss-html 并对其进行配置。</p><p>stylelint-config-recommended-scss：扩展 stylelint-config-recommended 共享配置， 并为 SCSS 配置其规则</p><p>stylelint-config-recommended-vue：扩展 stylelint-config-recommended 共享配置，并 为 Vue 配置其规则</p><p>stylelint-config-standard：打开额外的规则来执行在规范和一些 CSS 样式指南中发现的 通用约定，包括：惯用 CSS 原则，谷歌的 CSS 样式指南，Airbnb 的样式指南，和 @mdo 的代码指南。</p><p>stylelint-config-standard-scss：扩展 stylelint-config-standard 共享配置，并为 SCSS 配置其规则</p><p>stylelint-config-recess-order：属性的排序（插件包）</p><p>stylelint-config-prettier：关闭所有不必要的或可能与 Prettier 冲突的规则</p><p>postcss：postcss-html 的依赖包</p><p>postcss-html：用于解析 HTML（和类似 HTML）的 PostCSS 语法</p><h3 id="配置-7" tabindex="-1">配置 <a class="header-anchor" href="#配置-7" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>修改 package.json 中相关配置：</p><p>在 script 中增加命令：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;lint:style&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;stylelint </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">./**/*.{css,less,scss,vue,html}</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> --fix&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;lint:style&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;stylelint </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">./**/*.{css,less,scss,vue,html}</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> --fix&quot;</span></span></code></pre></div><p>在 lint-staged 中增加需要检查的文件，并配置对应需要执行的命令：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&quot;lint-staged&quot;: {</span></span>
<span class="line"><span style="color:#85E89D;">+		&quot;src/**/*.{html,less,css,scss,vue}&quot;: [</span></span>
<span class="line"><span style="color:#85E89D;">+			&quot;pnpm run lint:style&quot;</span></span>
<span class="line"><span style="color:#85E89D;">+		],</span></span>
<span class="line"><span style="color:#E1E4E8;">		&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;: [</span></span>
<span class="line"><span style="color:#E1E4E8;">			&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		],</span></span>
<span class="line"><span style="color:#E1E4E8;">		&quot;src/**/*.{js,cjs,ts,vue}&quot;: [</span></span>
<span class="line"><span style="color:#E1E4E8;">			&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		],</span></span>
<span class="line"><span style="color:#E1E4E8;">		&quot;./*.{js,cjs,ts,html,json}&quot;: [</span></span>
<span class="line"><span style="color:#E1E4E8;">			&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		],</span></span>
<span class="line"><span style="color:#E1E4E8;">		&quot;./*.{js,cjs,ts}&quot;: [</span></span>
<span class="line"><span style="color:#E1E4E8;">			&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		]</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&quot;lint-staged&quot;: {</span></span>
<span class="line"><span style="color:#22863A;">+		&quot;src/**/*.{html,less,css,scss,vue}&quot;: [</span></span>
<span class="line"><span style="color:#22863A;">+			&quot;pnpm run lint:style&quot;</span></span>
<span class="line"><span style="color:#22863A;">+		],</span></span>
<span class="line"><span style="color:#24292E;">		&quot;src/**/*.{js,cjs,ts,html,json,css,scss,vue}&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">			&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#24292E;">		],</span></span>
<span class="line"><span style="color:#24292E;">		&quot;src/**/*.{js,cjs,ts,vue}&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">			&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#24292E;">		],</span></span>
<span class="line"><span style="color:#24292E;">		&quot;./*.{js,cjs,ts,html,json}&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">			&quot;npx prettier --write&quot;</span></span>
<span class="line"><span style="color:#24292E;">		],</span></span>
<span class="line"><span style="color:#24292E;">		&quot;./*.{js,cjs,ts}&quot;: [</span></span>
<span class="line"><span style="color:#24292E;">			&quot;npx eslint --fix&quot;</span></span>
<span class="line"><span style="color:#24292E;">		]</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span></code></pre></div><h2 id="路径别名" tabindex="-1">路径别名 <a class="header-anchor" href="#路径别名" aria-label="Permalink to &quot;路径别名&quot;">​</a></h2><p>路径别名可以说是项目必要的配置了，可以方便我们读取某个文件路径。在 vite 项目中配 置项目别名只需要在 vite.config.js 中定义即可，若是 ts 项目需要在 ts.config.json 中配置才能获得编辑器的支持。</p><h3 id="vite-config-js" tabindex="-1">vite.config.js <a class="header-anchor" href="#vite-config-js" aria-label="Permalink to &quot;vite.config.js&quot;">​</a></h3><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">import { defineConfig } from &quot;vite&quot;;</span></span>
<span class="line"><span style="color:#E1E4E8;">import vue from &quot;@vitejs/plugin-vue&quot;;</span></span>
<span class="line"><span style="color:#E1E4E8;">import path from &quot;node:path&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="color:#E1E4E8;">export default defineConfig({</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [vue()],</span></span>
<span class="line"><span style="color:#85E89D;">+  resolve: {</span></span>
<span class="line"><span style="color:#85E89D;">+    alias: {</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@&quot;: path.resolve(__dirname, &quot;src&quot;),</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@User&quot;: path.resolve(__dirname, &quot;src/views/user&quot;), // 其他别名</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@Admin&quot;: path.resolve(__dirname, &quot;src/views/admin&quot;),// 其他别名</span></span>
<span class="line"><span style="color:#85E89D;">+    },</span></span>
<span class="line"><span style="color:#85E89D;">+  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">import { defineConfig } from &quot;vite&quot;;</span></span>
<span class="line"><span style="color:#24292E;">import vue from &quot;@vitejs/plugin-vue&quot;;</span></span>
<span class="line"><span style="color:#24292E;">import path from &quot;node:path&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="color:#24292E;">export default defineConfig({</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [vue()],</span></span>
<span class="line"><span style="color:#22863A;">+  resolve: {</span></span>
<span class="line"><span style="color:#22863A;">+    alias: {</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@&quot;: path.resolve(__dirname, &quot;src&quot;),</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@User&quot;: path.resolve(__dirname, &quot;src/views/user&quot;), // 其他别名</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@Admin&quot;: path.resolve(__dirname, &quot;src/views/admin&quot;),// 其他别名</span></span>
<span class="line"><span style="color:#22863A;">+    },</span></span>
<span class="line"><span style="color:#22863A;">+  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="ts-config-json" tabindex="-1">ts.config.json <a class="header-anchor" href="#ts-config-json" aria-label="Permalink to &quot;ts.config.json&quot;">​</a></h3><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  &quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;target&quot;: &quot;ES2020&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;useDefineForClassFields&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;module&quot;: &quot;ESNext&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;lib&quot;: [&quot;ES2020&quot;, &quot;DOM&quot;, &quot;DOM.Iterable&quot;],</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;skipLibCheck&quot;: true,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    /* Bundler mode */</span></span>
<span class="line"><span style="color:#85E89D;">+    &quot;baseUrl&quot;: &quot;.&quot;,</span></span>
<span class="line"><span style="color:#85E89D;">+    &quot;paths&quot;: {</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@/*&quot;: [&quot;src/*&quot;],</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@User/*&quot;: [&quot;src/views/user/*&quot;],</span></span>
<span class="line"><span style="color:#85E89D;">+      &quot;@Admin/*&quot;: [&quot;src/views/admin/*&quot;],</span></span>
<span class="line"><span style="color:#85E89D;">+    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;moduleResolution&quot;: &quot;bundler&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;allowImportingTsExtensions&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;resolveJsonModule&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;isolatedModules&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;noEmit&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;jsx&quot;: &quot;preserve&quot;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    /* Linting */</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;strict&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;noUnusedLocals&quot;: false,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;noUnusedParameters&quot;: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    &quot;noFallthroughCasesInSwitch&quot;: true</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  &quot;include&quot;: [&quot;src/**/*.ts&quot;, &quot;src/**/*.d.ts&quot;, &quot;src/**/*.tsx&quot;, &quot;src/**/*.vue&quot;],</span></span>
<span class="line"><span style="color:#E1E4E8;">  &quot;references&quot;: [{ &quot;path&quot;: &quot;./tsconfig.node.json&quot; }]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  &quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">    &quot;target&quot;: &quot;ES2020&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;useDefineForClassFields&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;module&quot;: &quot;ESNext&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;lib&quot;: [&quot;ES2020&quot;, &quot;DOM&quot;, &quot;DOM.Iterable&quot;],</span></span>
<span class="line"><span style="color:#24292E;">    &quot;skipLibCheck&quot;: true,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    /* Bundler mode */</span></span>
<span class="line"><span style="color:#22863A;">+    &quot;baseUrl&quot;: &quot;.&quot;,</span></span>
<span class="line"><span style="color:#22863A;">+    &quot;paths&quot;: {</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@/*&quot;: [&quot;src/*&quot;],</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@User/*&quot;: [&quot;src/views/user/*&quot;],</span></span>
<span class="line"><span style="color:#22863A;">+      &quot;@Admin/*&quot;: [&quot;src/views/admin/*&quot;],</span></span>
<span class="line"><span style="color:#22863A;">+    },</span></span>
<span class="line"><span style="color:#24292E;">    &quot;moduleResolution&quot;: &quot;bundler&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;allowImportingTsExtensions&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;resolveJsonModule&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;isolatedModules&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;noEmit&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;jsx&quot;: &quot;preserve&quot;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    /* Linting */</span></span>
<span class="line"><span style="color:#24292E;">    &quot;strict&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;noUnusedLocals&quot;: false,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;noUnusedParameters&quot;: true,</span></span>
<span class="line"><span style="color:#24292E;">    &quot;noFallthroughCasesInSwitch&quot;: true</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  &quot;include&quot;: [&quot;src/**/*.ts&quot;, &quot;src/**/*.d.ts&quot;, &quot;src/**/*.tsx&quot;, &quot;src/**/*.vue&quot;],</span></span>
<span class="line"><span style="color:#24292E;">  &quot;references&quot;: [{ &quot;path&quot;: &quot;./tsconfig.node.json&quot; }]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,253),e=[o];function t(c,r,i,E,y,u){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{q as __pageData,F as default};

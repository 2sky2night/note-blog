import{_ as s,o as a,c as o,Q as e}from"./chunks/framework.273ff57c.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/js/module.md","filePath":"interview/js/module.md","lastUpdated":1699188084000}'),l={name:"interview/js/module.md"},t=e(`<h2 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h2><h3 id="amd" tabindex="-1">AMD <a class="header-anchor" href="#amd" aria-label="Permalink to &quot;AMD&quot;">​</a></h3><p>异步加载模块，模块加载完成后再执行后续操作</p><h3 id="cmd" tabindex="-1">CMD <a class="header-anchor" href="#cmd" aria-label="Permalink to &quot;CMD&quot;">​</a></h3><p>同步加载模块，需要时才会通过 require 来获取导出模块。导出会输出一个对象，后续导入该模块都返回该对象，除非清空缓存，模块内部的操作不会影响导出的这个对象。</p><p>​ CMD 模块化，是运行时加载的，每次执行<code>require</code>都会执行整个模块，并获得导出数据的拷贝。</p><h3 id="esmodule" tabindex="-1">ESModule <a class="header-anchor" href="#esmodule" aria-label="Permalink to &quot;ESModule&quot;">​</a></h3><p>异步加载模块，有一个独立的模块依赖的解析阶段。并且是<strong>编译时输出接口</strong>，导出的是一个引用，所以通过引用修改导出的内容时，所有使用该模块的都会受到影响（浅拷贝）</p><p>​ ES 模块化是编译时加载的，每次导入会得到只读的引用数据。</p><h3 id="cmd-和-esmodule-的区别" tabindex="-1">CMD 和 ESModule 的区别 <a class="header-anchor" href="#cmd-和-esmodule-的区别" aria-label="Permalink to &quot;CMD 和 ESModule 的区别&quot;">​</a></h3><ol><li><p>静态与动态：CMD 是运行时才确定模块间的依赖关系，ESModule 是编译时确定模块间的依赖关系。（<strong>动态</strong>是指对于模块的依赖关系建立在代码执行阶段；<strong>静态</strong>是指对于模块的依赖关系建立在代码编译阶段）</p></li><li><p>引用与拷贝：CMD 导入的值都是一份拷贝，ESModule 导入的值是一份引用。</p></li><li><p>异步与同步：CMD 是调用 require 函数才获取模块数据，ESModule 是编译时就已经加载好模块数据了。</p></li><li><p>导入导出方式不一致</p></li><li><p>执行次数：CMD 在导入多个相同模块，会执行对应次数的模块，ESModule 在导入多个相同模块时，只会执行依次。</p></li></ol><h3 id="在浏览器中使用-esmodule" tabindex="-1">在浏览器中使用 ESModule <a class="header-anchor" href="#在浏览器中使用-esmodule" aria-label="Permalink to &quot;在浏览器中使用 ESModule&quot;">​</a></h3><p>在浏览器上,你可以通过将 type 属性设置为 module 用来告知浏览器将 script 标签视为模块。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;./main.mjs&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;./main.mjs&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>模块默认情况下是延迟的,因此你还可以使用 defer 的方式延迟你的脚本。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://juejin.cn/post/7166046272300777508" target="_blank" rel="noreferrer">https://juejin.cn/post/7166046272300777508</a></li></ol>`,17),n=[t];function p(r,c,i,d,u,E){return a(),o("div",null,n)}const m=s(l,[["render",p]]);export{y as __pageData,m as default};
